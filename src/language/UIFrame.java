/*
 * To change this te
    @Override
    public int getWidth(ImageObserver observer) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getHeight(ImageObserver observer) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ImageProducer getSource() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Graphics getGraphics() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object getProperty(String name, ImageObserver observer) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
mplate, choose Tools | Templates
 * and open the template in the editor.
 */
package language;

import java.awt.Font;
import java.io.File;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.SwingWorker;
import javax.swing.event.ListDataListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * @author Reynold
 */


public class UIFrame extends javax.swing.JFrame {
    
    UIFrameListener listener;
    private File fFile;
    private File [] allFiles;

    /**
     * Creates new form UIFrame
     */
    public UIFrame() {
        super("File-Name Converter ( English to Tamil )");
        initComponents();
        Font font=new Font("Latha", Font.PLAIN, 14);
        jOutPutLabel.setFont(font);
        jInputText.setFont(font);
    }

    public void setListener(UIFrameListener listener) {
        
        this.listener = listener;
        fFile=listener.getFirstFile();
        jInputText.setText(removeExtn(fFile.getName()));
        jTotalFileLabel.setText(listener.getNumOfFiles()+"");
        allFiles=listener.getAllFiles();
        MyListMod lm=new MyListMod(allFiles);
        jList1.setModel(lm);
        jList1.addListSelectionListener(new MyListSelect());
        updateStatus();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInputText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jOutPutLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jRetryButton = new javax.swing.JButton();
        jOkButton = new javax.swing.JButton();
        jnextFileButton = new javax.swing.JButton();
        jLowerCaseButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTotalFileLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCurrentFileLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInputText.setText("phonetics");

        jLabel2.setText("Word");

        jOutPutLabel.setText("output");

        jLabel4.setText("Result");

        jRetryButton.setText("Generate Tamil");
        jRetryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRetryButtonActionPerformed(evt);
            }
        });

        jOkButton.setText("Rename");
        jOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOkButtonActionPerformed(evt);
            }
        });

        jnextFileButton.setText("Next File");
        jnextFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jnextFileButtonActionPerformed(evt);
            }
        });

        jLowerCaseButton.setText("to Lower Case");
        jLowerCaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLowerCaseButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Total Files : ");

        jTotalFileLabel.setText("0");

        jLabel5.setText("Current File : ");

        jCurrentFileLabel.setText("0");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jOutPutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(jTotalFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jInputText, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(116, 116, 116)
                                        .addComponent(jOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 39, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRetryButton)
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLowerCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jnextFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCurrentFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOutPutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jnextFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLowerCaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRetryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTotalFileLabel)
                    .addComponent(jLabel5)
                    .addComponent(jCurrentFileLabel))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRetryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRetryButtonActionPerformed
        // TODO add your handling code here:
        String text=jInputText.getText();
        Retryer rtr=new Retryer(text);
        rtr.execute();
        
    }//GEN-LAST:event_jRetryButtonActionPerformed

    private void jOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOkButtonActionPerformed
        // TODO add your handling code here:
        Updater uptr=new Updater(fFile);
        uptr.execute();
    }//GEN-LAST:event_jOkButtonActionPerformed

    private void jnextFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jnextFileButtonActionPerformed
        // TODO add your handling code here:
        getNextFileAndUpdate();
    }//GEN-LAST:event_jnextFileButtonActionPerformed

    private void jLowerCaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLowerCaseButtonActionPerformed
        // TODO add your handling code here:
        jInputText.setText(jInputText.getText().toLowerCase());
    }//GEN-LAST:event_jLowerCaseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void lookAndFeel() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
    }
    
    private void getNextFileAndUpdate(){
        fFile=listener.getNextFile();
        
        if(fFile!=null){
            jInputText.setText(removeExtn(fFile.getName()));
            jOutPutLabel.setText("");
            updateStatus();
        }else {
            JOptionPane.showMessageDialog(UIFrame.this, "****** End ******* \n Finished");
            listener.finish();
        }
    }
    
    private void updateStatus(){
        jCurrentFileLabel.setText(listener.getFileNumber()+"");
    }
    
    private String removeExtn(String fileName){
        return fileName.replaceAll(".mp3", "");
    }
    
    
    private class Retryer extends SwingWorker<String, Void>{
        
        String edited;
        

        public Retryer(String edited) {
            this.edited=edited;
            
        }
        
        @Override
        protected String doInBackground() throws Exception {
            
            String returned = listener.tryWithThis(edited);
            return returned;
        }

        @Override
        protected void done() {
            super.done();
            try {
                String get = get();
                jOutPutLabel.setText(get);
            } catch (    InterruptedException | ExecutionException ex) {
                Logger.getLogger(UIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }
    
    private class Updater extends SwingWorker<Boolean, Void>{
        
        File myFile;

        public Updater(File myFile) {
            this.myFile=myFile;
        }
        
        @Override
        protected Boolean doInBackground() throws Exception {
            return listener.updateFileName(fFile, jOutPutLabel.getText());            
        }

        @Override
        protected void done() {
            super.done(); 
            try {
                if(get()){
                    
                    JOptionPane.showMessageDialog(UIFrame.this, "Done!! \n File Name : "+fFile.getName()+"\n Changed !!!");
                    getNextFileAndUpdate();
                    
                }
            } catch (    InterruptedException | ExecutionException ex) {
                Logger.getLogger(UIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }
    
    private class MyListMod implements ListModel<File>{
        
        File [] files;

        public MyListMod(File [] files) {
            this.files=files;
        }

        @Override
        public int getSize() {
            return files.length;
        }

        @Override
        public File getElementAt(int index) {
            return files[index];
        }

        @Override
        public void addListDataListener(ListDataListener l) {
            //System.out.println("added to List");
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
            //System.out.println("removed from List");
        }
    }
    
    
    
    
    private class MyListSelect implements ListSelectionListener{

        @Override
        public void valueChanged(ListSelectionEvent e) {
            JList lsm= (JList) e.getSource();
            int i=lsm.getSelectedIndex();
            jCurrentFileLabel.setText((i+1)+"");
            fFile=allFiles[i];
            String tmp=removeExtn(fFile.getName());
            jInputText.setText(tmp);
            
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jCurrentFileLabel;
    private javax.swing.JTextField jInputText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JButton jLowerCaseButton;
    private javax.swing.JButton jOkButton;
    private javax.swing.JLabel jOutPutLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jRetryButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jTotalFileLabel;
    private javax.swing.JButton jnextFileButton;
    // End of variables declaration//GEN-END:variables
}
